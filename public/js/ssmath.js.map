{"version":3,"sources":["ajaxcall.js","general.js"],"names":[],"mappingsncA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ssmath.js","sourcesContent":["/*\n    id = id form\n    onsuccess & onerror\n */\nfunction ajaxSaveUpdate(id, onsuccess, onerror) {\n    $(id).submit(function(e) {\n        e.preventDefault();\n\n        var me = $(this);\n\n        $.ajax({\n            type: 'post',\n            url: $(this).attr(\"action\"),\n            data: $(this).find('input, select, textarea').serialize(),\n            dataType: 'json',\n            success: function(data) {\n                if(!data.errors) {\n                    $(me).find('.has-error').removeClass('has-error');\n                    $(me).find('.help-block').remove();\n\n                    if($(me).closest('.modal').length > 0) {\n                        $(me).closest('.modal').modal('hide');\n                    }\n                    showAlert(\"Data has been saved !\", \"success\", \"Success:\");\n\n                    // Custom Call Back\n\n                    if(isFunction(onsuccess)) {\n                        onsuccess.call(this, data);\n                    }\n\n                } else {\n                    showValidationError(data, me)\n\n                }\n            },\n            error: function(xHr) {\n                showAlert(\"Oooops.. something when wrong..\", \"danger\", \"Error:\");\n            }\n        });\n\n    });\n}\n\nfunction ajaxSaveWithPrompt() {\n\n}\n\nfunction showValidationError(data, form) {\n    $(form).find('.has-error').removeClass('has-error');\n    $(form).find('.help-block').remove();\n    $.each(data.errors, function(errName,errVal) {\n        var target = $('[name^=' + errName + ']');\n        $.each(errVal, function(i, val) {\n            if ($(target).closest(\".form-group\").find(\"span.select2\").length > 0) {\n                $(target).closest(\".form-group\").removeClass('has-error').addClass('has-error').find('.form-control-feedback').remove();\n                $(target).closest(\".form-group\").find(\"span.select2\").after(generateHelpBlock(val));\n            } else if ($(target).closest('.input-group').length > 0) {\n                $(target).closest('.form-group').removeClass('has-error').addClass('has-error').find('.form-control-feedback').remove();\n                $(target).closest('.input-group').after(generateHelpBlock(val));\n            } else {\n                $(target).closest('.form-group').removeClass('has-error').addClass('has-error').find('.form-control-feedback').remove();\n                $(target).after(generateHelpBlock(val));\n            }\n        });\n    });\n}\n\nfunction showAlert(message, type, title, timeout, callback) {\n    if(typeof timeout === 'undefined') timeout = 5000;\n    $.notify({\n        title: title,\n        message : message,\n        mouse_over : 'pause'\n    },{\n        type : type,\n        newest_on_top : false,\n        delay: timeout\n    });\n\n    if(isFunction(callback)) {\n        callback.call(this);\n    }\n}\n\nfunction generateHelpBlock(val) {\n    return '<span class=\"help-block\">' +\n        '<strong>' + val + '</strong>' +\n        '</span>';\n}\n\nfunction generateErrorLoginDOM(val) {\n    return '<span class=\"glyphicon glyphicon-remove form-control-feedback\"></span>' + '<span class=\"help-block\">';\n}\n\nfunction isFunction(v) {\n    if(isDefined(v)) if(v instanceof Function) return true;\n    return false;\n}\n\nfunction isDefined(v) {\n    if(typeof v  !== \"undefined\") return true;\n    return false;\n}\n\n\n/**\n * Must btn and have data-action\n * @param btnid\n */\nfunction toggleActivate(btnid, onsuccess, onerror) {\n    $('body').on('click', btnid, function(e) {\n        e.preventDefault();\n        var me = $(this);\n        $.ajax({\n            url: $(me).data('action'),\n            method: 'post',\n            data: { data: $(me).data('id') },\n            dataType: 'json',\n            success: function(dt) {\n                if(isFunction(onsuccess)) {\n                    onsuccess.call(this, dt);\n                } else {\n                    showAlert(\"Toggle activation success\", \"success\", \"Success:\");\n                }\n            },\n            error: function(xHr) {\n                if(isFunction(onerror)) {\n                    onsuccess.call(this, xHr);\n                } else {\n                    showAlert(\"Oooops.. something when wrong..\", \"danger\", \"Error:\");\n                }\n            }\n        });\n    });\n}\n\n/**\n * Must btn and have data-action\n * @param btnid\n */\nfunction toggleDelete(btnid, onsuccess, onerror) {\n    $('body').on('click', btnid, function(e) {\n        e.preventDefault();\n        var me = $(this);\n        //BootstrapDialog.confirm(\"<p>re you sure you want delete this data permanently?</p>\", function(result) {\n        BootstrapDialog.confirm({\n            title: \"Warning !\",\n            type: BootstrapDialog.TYPE_WARNING,\n            size: BootstrapDialog.SIZE_SMALL,\n            message: \"Are you sure you want delete this data permanently?\",\n            callback: function(result) {\n                if(result) {\n                    $.ajax({\n                        url: $(me).attr('href'),\n                        method: 'post',\n                        data: { data: $(me).data('id') },\n                        dataType: 'json',\n                        success: function(dt) {\n                            if(isFunction(onsuccess)) {\n                                onsuccess.call(this, dt);\n                            } else {\n                                showAlert(\"Data has been deleted\", \"success\", \"Success:\");\n                            }\n                        },\n                        error: function(xHr) {\n                            if(isFunction(onerror)) {\n                                onsuccess.call(this, xHr);\n                            } else {\n                                showAlert(\"Oooops.. something when wrong..\", \"danger\", \"Error:\");\n                            }\n                        }\n                    });\n                }\n            }\n        });\n\n    });\n}\n\n/**\n * Must btn and have data-action\n * @param btnid\n */\nfunction toggleUndo(btnid, onsuccess, onerror) {\n    $('body').on('click', btnid, function(e) {\n        e.preventDefault();\n        var me = $(this);\n        //BootstrapDialog.confirm(\"<p>re you sure you want delete this data permanently?</p>\", function(result) {\n        BootstrapDialog.confirm({\n            title: \"Warning !\",\n            type: BootstrapDialog.TYPE_WARNING,\n            size: BootstrapDialog.SIZE_SMALL,\n            message: \"Are you sure you want undo this action?\",\n            callback: function(result) {\n                if(result) {\n                    $.ajax({\n                        url: $(me).data('action'),\n                        method: 'post',\n                        data: { data: $(me).data('id') },\n                        dataType: 'json',\n                        success: function(dt) {\n                            if(isFunction(onsuccess)) {\n                                onsuccess.call(this, dt);\n                            } else {\n                                showAlert(\"Undoing action success\", \"success\", \"Success:\");\n                            }\n                        },\n                        error: function(xHr) {\n                            if(isFunction(onerror)) {\n                                onsuccess.call(this, xHr);\n                            } else {\n                                showAlert(\"Oooops.. something when wrong..\", \"danger\", \"Error:\");\n                            }\n                        }\n                    });\n                }\n            }\n        });\n\n    });\n}\n\n/**\n * This function for instant edit on a detail field, ex. on table.\n * attributes component need :\n * 1 label with click-edit class\n * 1 input/select/etc with hide-n-seek class which contain data-action=<posturl> & data-id=<id> or you\n * can just adding custom callback\n *\n * Default : initHideNseek(null, null, null);\n *\n * @param onclicklabel\n * @param onfocusout\n * @param callback\n */\nfunction initHideNseek(onclicklabel, onfocusout, callback) {\n\n    $('body').on('click','.click-edit',function(e) {\n        if(!isFunction(onclicklabel)) {\n            $(this).hide();\n            $(this).closest(\"td\").find('.hide-n-seek').show();\n            $(this).closest(\"td\").find('.hide-n-seek').trigger('focus');\n        } else {\n            onclicklabel.call(this);\n        }\n    });\n\n\n    $('body').on('focusout','.hide-n-seek', function() {\n        if(isFunction(onfocusout)) {\n            onfocusout.call(this);\n        } else {\n            $(this).hide();\n            $(this).closest(\"td\").find('.click-edit').show();\n        }\n    });\n\n    $('body').on('change','input.hide-n-seek, textarea.hide-n-seek, select.hide-n-seek', function () {\n        if(!isFunction(callback)) {\n            var action = $(this).data('action');\n            var id = $(this).data('id');\n            var postData = $(this).serializeArray();\n            var me = $(this);\n            postData.push({name: \"id\", value: id});\n            $.ajax({\n                url: action,\n                dataType: 'json',\n                method: 'post',\n                data: postData,\n                success: function(data) {\n                    var table = $(me).closest('table').DataTable()\n                    table.draw();\n                },\n                error: function(xhr) {\n                    var table = $(me).closest('table').DataTable();\n                    table.draw();\n                }\n\n            });\n        } else {\n            callback.call(this);\n        }\n    });\n}\n\n\n\n//////////////// * USER ACTION * ////////////////////\n\nfunction ajaxAuth(formid) {\n\n    $(formid).on('submit', function(e) {\n        e.preventDefault();\n\n        var me = $(this);\n\n        var u = $(this).attr('action');\n        $.ajax({\n            url : u,\n            method : 'POST',\n            data : $(me).find(\"input\").serialize(),\n            dataType: 'json',\n            success: function (response) {\n                if(response.success) {\n                    location.reload();\n                }\n            },\n            error: function (xHr) {\n                if(xHr.status == 422) {\n                    var resp = $.parseJSON(xHr.responseText);\n                    $(me).find('.has-error').removeClass('has-error');\n                    $(me).find('.form-control-feedback').remove();\n                    $.each(resp, function (errName, errVal) {\n                        var target = $('[name=' + errName + ']');\n                        console.log($(target).closest('.input-group').length);\n                        if ($(target).closest('.input-group').length > 0) {\n                            $(target).closest('.form-group').removeClass('has-error').addClass('has-error').find('.form-control-feedback').remove();\n                            $(target).closest('.input-group').after(generateErrorLoginDOM());\n                        } else {\n                            $(target).closest('.form-group').removeClass('has-error').addClass('has-error').find('.form-control-feedback').remove();\n                            $(target).after(generateErrorLoginDOM());\n\n                        }\n                        showAlert(errVal.toString(), \"warning\", \"\", 1000);\n                    });\n                } else if(xHr.status == 423) {\n                    var resp = $.parseJSON(xHr.responseText);\n                    showAlert(resp.email, \"warning\", \"Locked: \")\n                } else {\n                    showAlert(\"Oooops.. something when wrong..\", \"danger\", \"Error:\");\n                }\n            },\n\n        })\n    });\n}\n\nfunction userSaveUpload(id, onsuccess, onerror) {\n    $(id).submit(function(e) {\n        e.preventDefault();\n\n        var me = $(this);\n        var formData = new FormData($(this)[0]);\n\n        $(me).find('.has-error').removeClass('has-error');\n        $(me).find('.help-block').remove();\n\n        $.ajax({\n            type: 'post',\n            url: $(this).attr(\"action\"),\n            data: formData,\n            contentType: false,\n            processData: false,\n            success: function(data, textStatus, jqXHR) {\n                data = jqXHR.responseJSON;\n                if(!data.errors) {\n\n                    if($(me).closest('.modal').length > 0) {\n                        $(me).closest('.modal').modal('hide');\n                    }\n\n                    if(isFunction(onsuccess)) {\n                        onsuccess.call(this, data);\n                    }\n                } else {\n                    showValidationError(data, me)\n                }\n            },\n            error: function(xHr) {\n                if(isFunction(onerror)) {\n                    onerror.call(this, xHr);\n                } else {\n                    showAlert(\"Oooops.. something when wrong..\", \"danger\", \"Error:\");\n                }\n            }\n        });\n\n    });\n}\n\nfunction loadListOption(selectid) {\n    if($(selectid).data(\"need\") !== undefined && $(selectid).data(\"need\") !== \"\" ) {\n        console.log($(selectid).data(\"need\"));\n        var src = $(selectid).data(\"need\");\n        $(\"body\").on(\"change\", src,function() {\n            var id = $(this).val();\n            console.log(id);\n            var me = $(selectid);\n            var url= $(selectid).data(\"src\") + \"/\" + id;\n            me.html(\"\");\n            $.get(url, function(dt) {\n                $.map(dt, function(val, i) {\n                    me.append(\"<option value='\"+ i +\"'>\" + val + \"</option>\")\n                });\n            });\n        });\n        $($(selectid).data('need')).trigger(\"change\");\n    } else {\n        $(selectid).ready(function(e) {\n            var me = $(selectid);\n            me.html(\"\");\n            $(this).change(function() {\n                var url= $(selectid).data(\"src\");\n                $.get(url, function(dt) {\n                    $.map(dt, function(val, i) {\n                        me.append(\"<option value='\"+ i +\"'>\" + val + \"</option>\")\n                    });\n                });\n            });\n        });\n    }\n}\n\nfunction ajaxSignUp(formid) {\n    $(formid).on('submit', function(e) {\n        e.preventDefault();\n\n        var me = $(this);\n\n        var u = $(this).attr('action');\n        $.ajax({\n            url : u,\n            method : 'POST',\n            data : $(me).find(\"input, textarea\").serialize(),\n            dataType: 'json',\n            success: function (response) {\n                if(response) {\n                    location.href = response.redirect;\n                }\n            },\n            error: function (xHr) {\n                console.log(xHr);\n                if(xHr.status == 422) {\n                    var resp = $.parseJSON(xHr.responseText);\n                    $(me).find('.has-error').removeClass('has-error');\n                    $(me).find('.form-control-feedback').remove();\n                    $.each(resp, function(errName,errVal) {\n                        var target = $('[name^=' + errName + ']');\n                        $(target).closest('.form-group').removeClass('has-error').addClass('has-error').find('.form-control-feedback').remove();\n                        $(target).after(generateErrorLoginDOM());\n                        showAlert(errVal.toString(),\"warning\", \"\", 1000);\n                    });\n\n                } else {\n                    showAlert(\"Oooops.. something when wrong..\", \"danger\", \"Error:\");\n                }\n            },\n\n        })\n    });\n}","$(document).ready(function() {\n    $.fn.select2.defaults.set( \"theme\", \"bootstrap\" );\n    /// EVERY AJAX REQUEST PROTECT THE BUTTON\n    $(document).ajaxStart(function() {\n        $('button, .btn').prop('disabled', true);\n    });\n\n    $(document).ajaxComplete(function() {\n        $('button, .btn').prop('disabled', false);\n        $('.btn-disabled').prop('disabled', true);\n    });\n\n    // FORCE DISABLED BUTTON\n    $('.btn-disabled').click(function(e) {\n        e.preventDefault();\n        return;\n    });\n\n    // TOOLTIP TOGGLE\n    $('[data-toggle=\"tooltip\"]').tooltip();\n\n    $(\".select2-multiple\").select2({\n        placeholder: \"choose\",\n        width: \"100%\",\n        multiple: true\n\n    });\n\n    $(\".select2-single\").select2({\n        placeholder: \"choose\",\n        width: \"100%\"\n    });\n\n    $(\"table.dataTable\").resize();\n    $(window).resize(function () {\n        $(\"table.dataTable\").resize();\n    });\n\n});\n\nfunction refreshTable(tableid) {\n    var table = $(tableid).DataTable();\n    table.draw();\n}\n\nfunction setupDateRange(idfrom, idto) {\n    $(idfrom).datepicker({\n        format: 'yyyy-mm-dd',\n        todayHighlight: true,\n        setDate: new Date(),\n    });\n\n    $(idto).datepicker({\n        format: 'yyyy-mm-dd',\n        todayHighlight: true,\n        setDate: new Date(),\n    });\n\n    dateRangeEvent(idfrom, idto);\n}\n\nfunction dateRangeEvent(idfrom, idto) {\n    $(idfrom).on(\"changeDate\", function (e) {\n        $(idto).data(\"datepicker\").setStartDate(e.date);\n    });\n    $(idto).on(\"changeDate\", function (e) {\n        $(idfrom).data(\"datepicker\").setEndDate(e.date);\n    });\n}\n\n\n///// CUSTOM FILE INPUT //////\n$(function() {\n\n    // We can attach the `fileselect` event to all file inputs on the page\n    $(document).on('change', ':file', function() {\n        var input = $(this),\n            numFiles = input.get(0).files ? input.get(0).files.length : 1,\n            label = input.val().replace(/\\\\/g, '/').replace(/.*\\//, '');\n        input.trigger('fileselect', [numFiles, label]);\n    });\n\n    // We can watch for our custom `fileselect` event like this\n    $(document).ready( function() {\n        $(':file').on('fileselect', function(event, numFiles, label) {\n\n            var input = $(this).parents('.input-group').find(':text'),\n                log = numFiles > 1 ? numFiles + ' files selected' : label;\n\n            if( input.length ) {\n                input.val(log);\n            } else {\n                //if( log ) alert(log);\n            }\n\n        });\n    });\n\n});"]}