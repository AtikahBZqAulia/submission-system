{"version":3,"sources":["ajaxcall.js","general.js"],"names":[],"mappingsvUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ssmath.js","sourcesContent":["/*\r\n    id = id form\r\n    onsuccess & onerror\r\n */\r\nfunction ajaxSaveUpdate(id, onsuccess, onerror) {\r\n    $(id).submit(function(e) {\r\n        e.preventDefault();\r\n\r\n        var me = $(this);\r\n\r\n        $.ajax({\r\n            type: 'post',\r\n            url: $(this).attr(\"action\"),\r\n            data: $(this).find('input, select, textarea').serialize(),\r\n            dataType: 'json',\r\n            success: function(data) {\r\n                if(!data.errors) {\r\n                    $(me).find('.has-error').removeClass('has-error');\r\n                    $(me).find('.help-block').remove();\r\n\r\n                    if($(me).closest('.modal').length > 0) {\r\n                        $(me).closest('.modal').modal('hide');\r\n                    }\r\n                    showAlert(\"Data has been saved !\", \"success\", \"Success:\");\r\n\r\n                    // Custom Call Back\r\n\r\n                    if(isFunction(onsuccess)) {\r\n                        onsuccess.call(this, data);\r\n                    }\r\n\r\n                } else {\r\n                    showValidationError(data, me)\r\n\r\n                }\r\n            },\r\n            error: function(xHr) {\r\n                showAlert(\"Oooops.. something when wrong..\", \"danger\", \"Error:\");\r\n            }\r\n        });\r\n\r\n    });\r\n}\r\n\r\nfunction ajaxSaveWithPrompt() {\r\n\r\n}\r\n\r\nfunction showValidationError(data, form) {\r\n    $(form).find('.has-error').removeClass('has-error');\r\n    $(form).find('.help-block').remove();\r\n    $.each(data.errors, function(errName,errVal) {\r\n        var target = $('[name=' + errName + ']');\r\n        $.each(errVal, function(i, val) {\r\n            if($(target).closest('.input-group').length > 0 ) {\r\n                $(target).closest('.form-group').removeClass('has-error').addClass('has-error').find('.form-control-feedback').remove();\r\n                $(target).closest('.input-group').after(generateHelpBlock(val));\r\n            } else {\r\n                $(target).closest('.form-group').removeClass('has-error').addClass('has-error').find('.form-control-feedback').remove();\r\n                $(target).after(generateHelpBlock(val));\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nfunction showAlert(message, type, title, timeout, callback) {\r\n    if(typeof timeout === 'undefined') timeout = 5000;\r\n    $.notify({\r\n        title: title,\r\n        message : message,\r\n        mouse_over : 'pause'\r\n    },{\r\n        type : type,\r\n        newest_on_top : false,\r\n        delay: timeout\r\n    });\r\n\r\n    if(isFunction(callback)) {\r\n        callback.call(this);\r\n    }\r\n}\r\n\r\nfunction generateHelpBlock(val) {\r\n    return '<span class=\"help-block\">' +\r\n        '<strong>' + val + '</strong>' +\r\n        '</span>';\r\n}\r\n\r\nfunction generateErrorLoginDOM(val) {\r\n    return '<span class=\"glyphicon glyphicon-remove form-control-feedback\"></span>' + '<span class=\"help-block\">';\r\n}\r\n\r\nfunction isFunction(v) {\r\n    if(isDefined(v)) if(v instanceof Function) return true;\r\n    return false;\r\n}\r\n\r\nfunction isDefined(v) {\r\n    if(typeof v  !== \"undefined\") return true;\r\n    return false;\r\n}\r\n\r\n\r\n/**\r\n * Must btn and have data-action\r\n * @param btnid\r\n */\r\nfunction toggleActivate(btnid, onsuccess, onerror) {\r\n    $('body').on('click', btnid, function(e) {\r\n        e.preventDefault();\r\n        var me = $(this);\r\n        $.ajax({\r\n            action: $(me).data('action'),\r\n            method: 'post',\r\n            data: { data: $(me).data('id') },\r\n            dataType: 'json',\r\n            success: function(dt) {\r\n                if(isFunction(onsuccess)) {\r\n                    onsuccess.call(this, dt);\r\n                } else {\r\n                    showAlert(\"Toggle activation success\", \"success\", \"Success:\");\r\n                }\r\n            },\r\n            error: function(xHr) {\r\n                if(isFunction(onerror)) {\r\n                    onsuccess.call(this, xHr);\r\n                } else {\r\n                    showAlert(\"Oooops.. something when wrong..\", \"danger\", \"Error:\");\r\n                }\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\n/**\r\n * This function for instant edit on a detail field, ex. on table.\r\n * attributes component need :\r\n * 1 label with click-edit class\r\n * 1 input/select/etc with hide-n-seek class which contain data-action=<posturl> & data-id=<id> or you\r\n * can just adding custom callback\r\n *\r\n * Default : initHideNseek(null, null, null);\r\n *\r\n * @param onclicklabel\r\n * @param onfocusout\r\n * @param callback\r\n */\r\nfunction initHideNseek(onclicklabel, onfocusout, callback) {\r\n\r\n    $('body').on('click','.click-edit',function(e) {\r\n        if(!isFunction(onclicklabel)) {\r\n            $(this).hide();\r\n            $(this).closest(\"td\").find('select').show();\r\n            $(this).closest(\"td\").find('select').trigger('focus');\r\n        } else {\r\n            onclicklabel.call(this);\r\n        }\r\n    });\r\n\r\n\r\n    $('body').on('focusout','.hide-n-seek', function() {\r\n        if(isFunction(onfocusout)) {\r\n            onfocusout.call(this);\r\n        } else {\r\n            $(this).hide();\r\n            $(this).closest(\"td\").find('.click-edit').show();\r\n        }\r\n    });\r\n\r\n    $('body').on('change','select.hide-n-seek', function () {\r\n        if(!isFunction(callback)) {\r\n            var action = $(this).data('action');\r\n            var id = $(this).data('id');\r\n            var postData = $(this).serializeArray();\r\n            postData.push({name: \"id\", value: id});\r\n            $.ajax({\r\n                url: action,\r\n                dataType: 'json',\r\n                method: 'post',\r\n                data: postData,\r\n                success: function(data) {\r\n                    var table = $(\"#datalist\").DataTable();\r\n                    table.draw();\r\n                },\r\n                error: function(xhr) {\r\n                    var table = $(\"#datalist\").DataTable();\r\n                    table.draw();\r\n                }\r\n\r\n            });\r\n        } else {\r\n            callback.call(this);\r\n        }\r\n    });\r\n}\r\n\r\n\r\n\r\n//////////////// * USER ACTION * ////////////////////\r\n\r\nfunction ajaxAuth(formid) {\r\n\r\n    $(formid).on('submit', function(e) {\r\n        e.preventDefault();\r\n\r\n        var me = $(this);\r\n\r\n        var u = $(this).attr('action');\r\n        $.ajax({\r\n            url : u,\r\n            method : 'POST',\r\n            data : $(me).find(\"input\").serialize(),\r\n            dataType: 'json',\r\n            success: function (response) {\r\n                if(response.success) {\r\n                    location.reload();\r\n                }\r\n            },\r\n            error: function (xHr) {\r\n                if(xHr.status == 422) {\r\n                    var resp = $.parseJSON(xHr.responseText);\r\n                    $(me).find('.has-error').removeClass('has-error');\r\n                    $(me).find('.form-control-feedback').remove();\r\n                    $.each(resp, function (errName, errVal) {\r\n                        var target = $('[name=' + errName + ']');\r\n                        console.log($(target).closest('.input-group').length);\r\n                        if ($(target).closest('.input-group').length > 0) {\r\n                            $(target).closest('.form-group').removeClass('has-error').addClass('has-error').find('.form-control-feedback').remove();\r\n                            $(target).closest('.input-group').after(generateErrorLoginDOM());\r\n                        } else {\r\n                            $(target).closest('.form-group').removeClass('has-error').addClass('has-error').find('.form-control-feedback').remove();\r\n                            $(target).after(generateErrorLoginDOM());\r\n\r\n                        }\r\n                        showAlert(errVal.toString(), \"warning\", \"\", 1000);\r\n                    });\r\n                } else if(xHr.status == 423) {\r\n                    var resp = $.parseJSON(xHr.responseText);\r\n                    showAlert(resp.email, \"warning\", \"Locked: \")\r\n                } else {\r\n                    showAlert(\"Oooops.. something when wrong..\", \"danger\", \"Error:\");\r\n                }\r\n            },\r\n\r\n        })\r\n    });\r\n}\r\n\r\nfunction userSaveUpload(id, onsuccess, onerror) {\r\n    $(id).submit(function(e) {\r\n        e.preventDefault();\r\n\r\n        var me = $(this);\r\n        var formData = new FormData($(this)[0]);\r\n\r\n        $(me).find('.has-error').removeClass('has-error');\r\n        $(me).find('.help-block').remove();\r\n\r\n        $.ajax({\r\n            type: 'post',\r\n            url: $(this).attr(\"action\"),\r\n            data: formData,\r\n            contentType: false,\r\n            processData: false,\r\n            success: function(data, textStatus, jqXHR) {\r\n                data = jqXHR.responseJSON;\r\n                if(!data.errors) {\r\n\r\n                    if($(me).closest('.modal').length > 0) {\r\n                        $(me).closest('.modal').modal('hide');\r\n                    }\r\n\r\n                    if(isFunction(onsuccess)) {\r\n                        onsuccess.call(this, data);\r\n                    }\r\n                } else {\r\n                    showValidationError(data, me)\r\n                }\r\n            },\r\n            error: function(xHr) {\r\n                if(isFunction(onerror)) {\r\n                    onerror.call(this, xHr);\r\n                } else {\r\n                    showAlert(\"Oooops.. something when wrong..\", \"danger\", \"Error:\");\r\n                }\r\n            }\r\n        });\r\n\r\n    });\r\n}\r\n\r\nfunction ajaxSignUp(formid) {\r\n    $(formid).on('submit', function(e) {\r\n        e.preventDefault();\r\n\r\n        var me = $(this);\r\n\r\n        var u = $(this).attr('action');\r\n        $.ajax({\r\n            url : u,\r\n            method : 'POST',\r\n            data : $(me).find(\"input, textarea\").serialize(),\r\n            dataType: 'json',\r\n            success: function (response) {\r\n                if(response) {\r\n                    location.href = response.redirect;\r\n                }\r\n            },\r\n            error: function (xHr) {\r\n                if(xHr.status == 422) {\r\n                    var resp = $.parseJSON(xHr.responseText);\r\n                    $(me).find('.has-error').removeClass('has-error');\r\n                    $(me).find('.form-control-feedback').remove();\r\n                    $.each(resp, function(errName,errVal) {\r\n                        var target = $('[name=' + errName + ']');\r\n                        $(target).closest('.form-group').removeClass('has-error').addClass('has-error').find('.form-control-feedback').remove();\r\n                        $(target).after(generateErrorLoginDOM());\r\n                        showAlert(errVal.toString(),\"warning\", \"\", 1000);\r\n                    });\r\n\r\n                } else {\r\n                    showAlert(\"Oooops.. something when wrong..\", \"danger\", \"Error:\");\r\n                }\r\n            },\r\n\r\n        })\r\n    });\r\n}","$(document).ready(function() {\r\n\r\n    /// EVERY AJAX REQUEST PROTECT THE BUTTON\r\n    $(document).ajaxStart(function() {\r\n        $('button, .btn').prop('disabled', true);\r\n    });\r\n\r\n    $(document).ajaxComplete(function() {\r\n        $('button, .btn').prop('disabled', false);\r\n        $('.btn-disabled').prop('disabled', true);\r\n    });\r\n\r\n    // FORCE DISABLED BUTTON\r\n    $('.btn-disabled').click(function(e) {\r\n        e.preventDefault();\r\n        return;\r\n    });\r\n\r\n    // TOOLTIP TOGGLE\r\n    $('[data-toggle=\"tooltip\"]').tooltip();\r\n\r\n});\r\n\r\nfunction setupDateRange(idfrom, idto) {\r\n    $(idfrom).datepicker({\r\n        format: 'yyyy-mm-dd',\r\n        todayHighlight: true,\r\n        setDate: new Date(),\r\n    });\r\n\r\n    $(idto).datepicker({\r\n        format: 'yyyy-mm-dd',\r\n        todayHighlight: true,\r\n        setDate: new Date(),\r\n    });\r\n\r\n    dateRangeEvent(idfrom, idto);\r\n}\r\n\r\nfunction dateRangeEvent(idfrom, idto) {\r\n    $(idfrom).on(\"changeDate\", function (e) {\r\n        $(idto).data(\"datepicker\").setStartDate(e.date);\r\n    });\r\n    $(idto).on(\"changeDate\", function (e) {\r\n        $(idfrom).data(\"datepicker\").setEndDate(e.date);\r\n    });\r\n}\r\n\r\n\r\n///// CUSTOM FILE INPUT //////\r\n$(function() {\r\n\r\n    // We can attach the `fileselect` event to all file inputs on the page\r\n    $(document).on('change', ':file', function() {\r\n        var input = $(this),\r\n            numFiles = input.get(0).files ? input.get(0).files.length : 1,\r\n            label = input.val().replace(/\\\\/g, '/').replace(/.*\\//, '');\r\n        input.trigger('fileselect', [numFiles, label]);\r\n    });\r\n\r\n    // We can watch for our custom `fileselect` event like this\r\n    $(document).ready( function() {\r\n        $(':file').on('fileselect', function(event, numFiles, label) {\r\n\r\n            var input = $(this).parents('.input-group').find(':text'),\r\n                log = numFiles > 1 ? numFiles + ' files selected' : label;\r\n\r\n            if( input.length ) {\r\n                input.val(log);\r\n            } else {\r\n                //if( log ) alert(log);\r\n            }\r\n\r\n        });\r\n    });\r\n\r\n});"],"sourceRoot":"/source/"}